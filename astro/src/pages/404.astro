---
import Layout from "../layouts/PageLayout.astro";
---

<Layout>
  <div class="block">
    <div class="player-wrapper">
      <div class="player">
        <video class="video-container">
          <source
            src="https://ftp.f1nalboss.de/data/imgly/videoplayer/testvid.mp4"
            type="video/mp4"
          />
          <source
            src="https://ftp.f1nalboss.de/data/imgly/videoplayer/testvid.mp4"
            type="video/webm"
          />
          <p>No HTML5 video supported</p>
        </video>
        <div class="controls">
          <button class="play-button" title="Toggle Play">
            <svg
              class="playback-button-svg"
              width="68"
              height="68"
              viewBox="0 0 68 68"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M48 34.5L23.25 48.7894L23.25 20.2106L48 34.5Z"
                fill="#F8FAFB"></path>
            </svg></button
          >
          <div class="total-duration">00:00</div>
          <div class="progress">
            <div class="progress__filled"></div>
          </div>
          <div class="current-time">00:00</div>
          <button class="volume-button" title="Toggle Mute">
            <svg
              width="68"
              height="68"
              viewBox="0 0 68 68"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M54.3189 22.6981C53.9707 22.4676 53.5147 22.497 53.2008 22.7716L51.8915 23.9093C51.6904 24.0858 51.5728 24.3359 51.5728 24.6057C51.5728 24.8754 51.7297 25.2039 51.9896 25.3756C55.1869 27.4793 57.016 30.4952 57.016 33.6435C57.016 36.7917 55.182 39.8076 51.9896 41.9114C51.7444 42.0732 51.5924 42.3429 51.5777 42.6371C51.5629 42.9314 51.6904 43.2109 51.916 43.3972L53.2254 44.4614C53.3921 44.5987 53.598 44.6673 53.8089 44.6673C54.0198 44.6673 54.162 44.6183 54.3189 44.5153C58.4332 41.7741 60.7969 37.8019 60.7969 33.6091C60.7969 29.4163 58.4382 25.4393 54.3189 22.703V22.6981Z"
                fill="var(--primary-light)"></path>
              <path
                d="M47.4097 6.06439C47.1154 5.90256 46.7526 5.91237 46.473 6.09381L24.95 19.8344H10.0962C9.58624 19.8344 9.17432 20.2463 9.17432 20.7563V46.531C9.17432 47.041 9.58624 47.4529 10.0962 47.4529H24.95L46.473 61.1151C46.6251 61.2082 46.7967 61.2573 46.9683 61.2573C47.14 61.2573 47.2724 61.218 47.4146 61.1445C47.7088 60.9827 47.8903 60.6737 47.8903 60.3354V6.87352C47.8903 6.53516 47.7088 6.22621 47.4097 6.06439ZM27.1862 22.4629L44.4232 11.5077V55.711L27.1862 44.7901V22.4629ZM12.6315 44.0153V23.1936H23.7241V44.0104H12.6315V44.0153Z"
                fill="var(--primary-light)"></path>
            </svg>
          </button>
        </div>
      </div>
    </div>
  </div>
</Layout>

<style lang="scss" is:global>
  .block {
    height: 70vh;
    width: 100%;
    position: relative;
  }
  .player-wrapper {
    position: relative;
    margin: 10rem auto;
    width: 95%;
    max-width: 750px;
  }
  .player {
    box-sizing: border-box;
    overflow: hidden;
    position: relative;
    width: 100%;
  }
  .video-container {
    transform: translateY(4px);
    width: 100%;
  }
  .controls {
    display: flex;
    align-items: center;
    justify-content: space-evenly;
    position: absolute;
    bottom: -50px;
    left: 0px;
    width: 100%;
    height: 50px;
    margin: 0 auto;
    padding: 0.5rem;
    transition: var(--transition-smooth);
    // backdrop-filter: blur(20px) saturate(120%) brightness(1.35);
    background: var(--accent-blue-secondary);
  }

  .play-button,
  .volume-button {
    display: grid;
    place-items: center;
    min-width: 50px;
    max-width: 50px;
    height: 100%;
  }
  .current-time,
  .total-duration {
    display: grid;
    place-items: center;
    padding-top: 0.1rem;
    height: 100%;
    min-width: 60px;
    max-width: 60px;
    // margin: 0 0.5rem;
    font-size: 14px;
    font-family: "Aktiv-Regular";
    color: white;
  }
  .volume-button {
    padding: 0.45rem 0;
  }
  .volume-button,
  .play-button {
    background: none;
    border: none;
    color: var(--primary-light);
    height: 40px;
    position: relative;
    transition: var(--hover-transition);
    opacity: 1;
    display: grid;
    place-items: center;
    cursor: pointer;

    & > * {
      width: 100%;
      height: 100%;
    }
  }

  .progress {
    position: relative;
    display: flex;
    flex-basis: 100%;
    background: rgba(248, 250, 251, 0.4);
    // background: rgba(255, 255, 255, 0.192);
    // backdrop-filter: blur(20px) saturate(120%) brightness(1.35);
    cursor: pointer;
    height: 5px;
    border-radius: 20px;
    transition: var(--hover-transition);
    overflow: hidden;
  }
  .progress__filled {
    transition: flex-basis 250ms linear;
    width: 50%;
    background: var(--primary-light);
    flex: 0;
    flex-basis: 0%;
  }
</style>

<script>
  const videoContainer = document.querySelector(".video-container");
  const playBtn = document.querySelector(".play-button");
  const volumeBtn = document.querySelector(".volume-button");
  const progress = document.querySelector(".progress");
  const progressBar = document.querySelector(".progress__filled");
  const totalDuration = document.querySelector(".total-duration");
  const setCurrentTime = document.querySelector(".current-time");
  const controls = document.querySelector(".controls");
  const playbackTimes = document.querySelector(".playback-times");

  setTimeout(() => {
    const duration = videoContainer.duration;
    const minutes = Math.floor(duration / 60);
    const seconds = Math.floor(duration % 60);
    const formattedDuration = `${minutes.toString().padStart(2, "0")}:${seconds
      .toString()
      .padStart(2, "0")}`;
    totalDuration.innerHTML = formattedDuration;
  }, 50);

  function togglePlay() {
    if (videoContainer.paused || videoContainer.ended) {
      videoContainer.play();
    } else {
      videoContainer.pause();
    }
  }

  function updatePlayBtn() {
    playBtn.innerHTML = videoContainer.paused
      ? `
        <svg
          class="playback-button-svg"
          width="68"
          height="68"
          viewBox="0 0 68 68"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            d="M48 34.5L23.25 48.7894L23.25 20.2106L48 34.5Z"
            fill="#F8FAFB"
          />
        </svg>
      `
      : `
        <svg
          class="playback-button-svg"
          width="68"
          height="68"
          viewBox="0 0 68 68"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
        >
          <rect x="21" y="20" width="10.0164" height="28.5082" fill="#F8FAFB" />
          <rect
            x="38.7212"
            y="20"
            width="10.0164"
            height="28.5082"
            fill="#F8FAFB"
          />
        </svg>
      `;
  }

  volumeBtn.addEventListener("click", () => {
    if (videoContainer.muted) {
      videoContainer.muted = false;
      volumeBtn.innerHTML = `<svg width="68" height="68" viewBox="0 0 68 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M54.3189 22.6981C53.9707 22.4676 53.5147 22.497 53.2008 22.7716L51.8915 23.9093C51.6904 24.0858 51.5728 24.3359 51.5728 24.6057C51.5728 24.8754 51.7297 25.2039 51.9896 25.3756C55.1869 27.4793 57.016 30.4952 57.016 33.6435C57.016 36.7917 55.182 39.8076 51.9896 41.9114C51.7444 42.0732 51.5924 42.3429 51.5777 42.6371C51.5629 42.9314 51.6904 43.2109 51.916 43.3972L53.2254 44.4614C53.3921 44.5987 53.598 44.6673 53.8089 44.6673C54.0198 44.6673 54.162 44.6183 54.3189 44.5153C58.4332 41.7741 60.7969 37.8019 60.7969 33.6091C60.7969 29.4163 58.4382 25.4393 54.3189 22.703V22.6981Z" fill="var(--primary-light)"/>
<path d="M47.4097 6.06439C47.1154 5.90256 46.7526 5.91237 46.473 6.09381L24.95 19.8344H10.0962C9.58624 19.8344 9.17432 20.2463 9.17432 20.7563V46.531C9.17432 47.041 9.58624 47.4529 10.0962 47.4529H24.95L46.473 61.1151C46.6251 61.2082 46.7967 61.2573 46.9683 61.2573C47.14 61.2573 47.2724 61.218 47.4146 61.1445C47.7088 60.9827 47.8903 60.6737 47.8903 60.3354V6.87352C47.8903 6.53516 47.7088 6.22621 47.4097 6.06439ZM27.1862 22.4629L44.4232 11.5077V55.711L27.1862 44.7901V22.4629ZM12.6315 44.0153V23.1936H23.7241V44.0104H12.6315V44.0153Z" fill="var(--primary-light)"/>
</svg>


`;
    } else {
      videoContainer.muted = true;
      volumeBtn.innerHTML = `<svg width="68" height="68" viewBox="0 0 68 68" fill="none" xmlns="http://www.w3.org/2000/svg">
<path d="M60.9622 10.6591L47.6972 24.1055L44.2351 27.6117L27.1795 44.9027L24.6638 47.4527L10.2171 62.0956C10.0553 62.2624 9.83949 62.3408 9.62372 62.3408C9.40795 62.3408 9.20199 62.2624 9.04016 62.1006L7.89756 60.9727C7.569 60.649 7.569 60.1243 7.88775 59.7957L20.0689 47.4478L23.4624 44.0102H23.531V43.9416L26.9932 40.4353L44.2302 22.958L47.6923 19.4517L58.6328 8.36411C58.7947 8.19738 59.0104 8.11401 59.2262 8.11401C59.442 8.11401 59.6479 8.19248 59.8098 8.3543L60.9524 9.48219C61.2809 9.80584 61.2809 10.3306 60.9622 10.6591Z" fill="var(--primary-light)"/>
<path d="M12.4387 44.0153V23.1936H23.5312V41.6369L26.9933 38.1307V22.4629L44.2353 11.5028V20.6534L47.6974 17.1471V6.87352C47.6974 6.53516 47.5159 6.22621 47.2168 6.06439C46.9226 5.90256 46.5597 5.91237 46.2802 6.09381L24.7522 19.8344H9.90337C9.39337 19.8344 8.98145 20.2463 8.98145 20.7563V46.531C8.98145 47.041 9.39337 47.4529 9.90337 47.4529H17.7986L21.192 44.0153H12.4387Z" fill="var(--primary-light)"/>
<path d="M44.2351 55.7109L28.5771 45.7904L26.0957 48.3061L46.28 61.1199C46.432 61.2131 46.6036 61.2621 46.7753 61.2621C46.9469 61.2621 47.0793 61.2229 47.2215 61.1493C47.5157 60.9875 47.6972 60.6785 47.6972 60.3402V26.4104L44.2351 29.9167V55.7109Z" fill="var(--primary-light)"/>
</svg>

`;
    }
  });

  function handleProgress() {
    const currentTime = videoContainer.currentTime;
    const duration = videoContainer.duration;
    const timeLeft = duration - currentTime;
    const timeLeftFormatted = `-${formatTime(timeLeft)}`;

    const progressPercentage = (currentTime / duration) * 100;
    progressBar.style.flexBasis = `${progressPercentage}%`;

    setCurrentTime.innerHTML = timeLeftFormatted;
  }

  function formatTime(time) {
    const minutes = Math.floor(time / 60);
    const seconds = Math.floor(time % 60);
    return `${minutes.toString().padStart(2, "0")}:${seconds
      .toString()
      .padStart(2, "0")}`;
  }

  function jump(e) {
    const position =
      (e.offsetX / progress.offsetWidth) * videoContainer.duration;
    videoContainer.currentTime = position;
  }

  // change progress size on hover
  // progress.addEventListener("mouseover", () => {
  //   progress.style.height = "20px";
  // });
  // progress.addEventListener("mouseleave", () => {
  //   progress.style.height = "10px";
  // });

  // when video container is hovered, update UI elements
  let timeoutId;
  videoContainer.addEventListener("mouseover", () => {
    // move out of view
    controls.style.bottom = "0px";
    // controls.style.transform = "translate(-50%, -30px)";
    playbackTimes.style.opacity = "1";
    volumeBtn.style.opacity = "1";
  });

  videoContainer.addEventListener("mouseleave", (event) => {
    timeoutId = setTimeout(() => {
      if (
        !controls.contains(event.relatedTarget) ||
        !volumeBtn.contains(event.relatedTarget)
      ) {
        // return in view
        controls.style.bottom = "-50px";
        // controls.style.transform = "translate(-50%, 0px)";
        playbackTimes.style.opacity = "0";
        volumeBtn.style.opacity = "0";
      }
    }, 200);
  });
  controls.addEventListener("mouseenter", () => {
    clearTimeout(timeoutId);
  });
  controls.addEventListener("mouseleave", (event) => {
    timeoutId = setTimeout(() => {
      if (!videoContainer.contains(event.relatedTarget)) {
        // return in view
        controls.style.bottom = "-50px";
        // controls.style.transform = "translate(-50%, 0px)";
        playbackTimes.style.opacity = "0";
        volumeBtn.style.opacity = "0";
      }
    }, 200);
  });
  volumeBtn.addEventListener("mouseenter", () => {
    clearTimeout(timeoutId);
  });
  volumeBtn.addEventListener("mouseleave", (event) => {
    timeoutId = setTimeout(() => {
      if (!videoContainer.contains(event.relatedTarget)) {
        // return in view
        controls.style.bottom = "-50px";
        // controls.style.transform = "translate(-50%, 0px)";
        playbackTimes.style.opacity = "0";
        volumeBtn.style.opacity = "0";
      }
    }, 200);
  });

  playBtn.addEventListener("click", togglePlay);
  videoContainer.addEventListener("click", togglePlay);
  videoContainer.addEventListener("play", updatePlayBtn);
  videoContainer.addEventListener("pause", updatePlayBtn);
  videoContainer.addEventListener("timeupdate", handleProgress);

  let mousedown = false;
  progress.addEventListener("click", jump);
  progress.addEventListener("mousedown", () => (mousedown = true));
  progress.addEventListener("mousemove", (e) => mousedown && jump(e));
  progress.addEventListener("mouseup", () => (mousedown = false));
</script>
