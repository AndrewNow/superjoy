---
const { data } = Astro.props;
import SanityPortableText from "../SanityPortableText.astro";
import Button from "../Button.astro";
import AstroHeadbobBig from "../AstroHeadbobBig.astro";
---

<section id="whoweare-section">
  <svg
    class="whoweare-top-blob"
    width="1920"
    height="465"
    viewBox="0 0 1920 465"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path id="whoweare-top-blob" fill="var(--accent-orange)"></path>
  </svg>
  <div class="bg">
    <div class="inner">
      <div class="flex-area">
        <h3>Who we are</h3>
        <h5>
          {
            data.header ? (
              data.header
            ) : (
              <span>
                Founded in 2022, we're piggy-backing off the dreams and
                ambitions of our founders, SypherPK and Oni Studios.
              </span>
            )
          }
        </h5>
      </div>
      <div class="flex-area" data-second-row="true">
        <div class="svg-wrapper">
          <span class="logo">
            <AstroHeadbobBig color={"var(--primary-light)"} />
          </span>
          <!-- <svg
          width="277"
          height="193"
          viewBox="0 0 277 193"
          fill="none"
          xmlns="http://www.w3.org/2000/svg"
          >
          <path
          d="M276.977 74.4191C276.481 54.0572 268.16 35.1043 253.504 21.0373C242.185 10.1746 228.092 3.22063 212.759 0.879915C188.317 -2.89249 163.536 5.60679 146.49 23.6507C126.737 44.558 121.1 73.8965 129.263 99.6215C124.888 97.7581 119.657 96.0082 114.133 95.1447C114.11 95.1447 114.065 95.0765 114.043 95.0765V95.1219C108.992 94.3493 103.761 94.2811 98.7324 95.6219C93.862 96.9172 89.6906 99.3716 86.2181 102.871C79.6115 99.6443 60.3552 91.4859 48.7203 99.8034C39.5657 106.348 32.9816 121.665 29.87 130.278C28.3141 130.278 26.8259 130.596 25.4505 131.119L23.1055 128.505C20.7604 125.892 17.3106 124.369 13.6577 124.46C10.1853 124.506 6.80305 125.892 4.11981 128.324C1.86498 130.369 0.444436 133.096 0.0836637 136.005C-0.299657 139.118 0.647372 142.209 2.65417 144.459L16.7468 160.253V164.98C16.7468 167.048 17.6037 169.047 19.0919 170.456C20.5801 171.865 22.5869 172.593 24.6388 172.479C28.1563 172.252 34.4698 171.843 40.3775 171.365C75.192 168.548 80.7614 168.616 81.5957 168.684C82.881 168.843 84.5946 169.82 86.7367 171.047C89.7808 172.797 93.9296 175.183 99.8824 176.82C100.897 177.092 102.16 177.297 103.58 177.433C106.241 184.114 112.983 192.864 125.768 193C126.444 193 127.211 193 128.09 193C139.229 193 165.633 192.182 169.962 184.705C170.098 184.478 170.188 184.273 170.301 184.046C176.727 186.114 182.77 187.137 188.362 187.137C193.954 187.137 198.666 186.205 203.221 184.319C217.99 178.206 223.853 164.116 225.815 157.594C227.506 157.935 229.219 158.139 230.933 158.139C237.562 158.139 244.191 155.503 249.107 150.299C253.729 145.413 256.187 139.005 256.029 132.232C256.007 131.21 255.894 130.21 255.759 129.21C255.871 129.096 256.007 128.983 256.12 128.846C270.054 114.098 277.473 94.7583 276.977 74.3737V74.4191ZM240.245 145.209C234.338 149.731 225.882 149.436 220.335 144.118C217.359 141.254 215.668 137.414 215.578 133.278C215.51 130.596 216.119 128.006 217.336 125.71C217.584 125.392 217.855 125.074 218.148 124.779C220.922 121.847 224.642 120.188 228.656 120.074C228.791 120.074 228.904 120.074 229.039 120.074C232.917 120.074 236.57 121.552 239.389 124.256C242.297 127.051 243.943 130.801 244.056 134.846C244.146 138.709 242.793 142.368 240.291 145.231L240.245 145.209ZM174.156 129.755C177.742 130.051 182.026 130.142 186.829 129.551C192.195 128.892 198.666 126.71 202.455 125.301C203.379 124.96 204.123 126.119 203.447 126.824C198.712 131.801 187.347 139.936 173.593 131.46C172.804 130.937 173.209 129.642 174.179 129.755H174.156ZM205.882 133.891C205.927 135.096 206.062 136.3 206.288 137.482C201.958 139.55 197.201 141.073 192.015 142.095C190.121 141.823 188.227 141.482 186.333 141.05C193.12 139.618 199.704 137.232 205.882 133.891ZM207.167 141.027C207.325 141.504 207.505 141.959 207.708 142.436C206.175 142.595 204.619 142.686 203.086 142.732C204.484 142.209 205.837 141.641 207.167 141.027ZM225.409 42.74C217.133 33.0363 198.17 16.4695 170.864 26.1278C169.015 26.7641 167.527 24.4916 168.88 23.0826C174.314 17.4694 185.724 9.81097 206.919 11.4017C207.167 11.4017 207.415 11.4927 207.641 11.6063C210.031 12.8334 223.402 20.5828 228.611 40.9901C229.084 42.9218 226.694 44.2172 225.409 42.7173V42.74ZM149.105 131.528C149.917 132.301 150.751 133.073 151.586 133.8C148.587 135.641 143.446 138.232 138.508 138.05C130.075 137.732 124.505 137.527 124.235 122.529C124.122 116.166 123.085 111.121 121.732 107.166C124.483 108.144 126.985 109.257 129.105 110.302C129.511 111.348 132.284 118.597 132.262 124.006H134.697C134.697 119.847 133.299 114.938 132.284 111.939C133.818 112.78 134.9 113.439 135.396 113.757C138.981 120.165 143.558 126.165 149.105 131.505V131.528ZM54.3574 107.825C60.4454 103.485 73.3656 107.825 80.4458 110.984C80.4007 111.098 80.333 111.166 80.2879 111.28C78.7095 114.075 77.6047 116.825 76.838 119.438C73.9068 118.438 68.8785 117.506 63.7826 120.12C60.6258 121.733 58.1004 124.392 56.1613 128.028C51.5614 124.529 47.5478 122.551 44.3234 121.438C47.187 115.802 50.6595 110.462 54.3799 107.803L54.3574 107.825ZM75.3498 133.778L63.5797 135.232C64.7296 132.028 66.2629 129.846 68.1119 128.892C71.1333 127.301 74.7636 129.142 74.8087 129.164L75.2822 128.255C75.1695 130.323 75.2146 132.21 75.3498 133.8V133.778ZM42.1588 137.891C41.3696 136.3 40.3098 134.914 39.002 133.755C40.0843 130.778 41.5274 127.233 43.2185 123.688C46.3528 124.71 50.3889 126.642 55.1015 130.278C54.3123 132.142 53.681 134.232 53.1398 136.528L42.1588 137.891ZM9.89217 137.959C9.71178 137.755 9.73433 137.414 9.75688 137.232C9.82452 136.664 10.1402 136.096 10.6588 135.641C11.5833 134.8 12.7558 134.3 13.8607 134.3C14.4695 134.3 15.3263 134.414 15.9351 135.096L18.235 137.687C17.3106 139.505 16.7919 141.55 16.7919 143.709V145.663L9.91472 137.959H9.89217ZM39.6334 161.662C34.9659 162.048 30.0503 162.366 26.4877 162.616V143.731C26.4877 141.754 28.0886 140.141 30.0503 140.141C32.1473 140.141 33.861 141.868 33.861 143.981V151.799H43.5793V147.617L55.2368 146.163C56.4544 149.731 57.6043 155.049 56.3867 160.366C51.6967 160.707 46.1949 161.139 39.6334 161.684V161.662ZM125.881 183.274C120.221 183.205 116.794 180.501 114.742 177.729C127.684 177.342 143.806 175.32 149.353 174.592C153.029 176.683 156.591 178.524 160.041 180.092C154.562 181.819 140.492 183.41 125.881 183.251V183.274ZM162.77 181.319C162.77 181.319 162.747 181.296 162.724 181.274C162.724 181.274 162.77 181.274 162.792 181.296L162.77 181.319ZM199.456 175.388C185.791 181.001 165.611 174.933 141.146 157.844L135.621 165.889C135.847 166.048 136.05 166.184 136.253 166.32C122.611 167.775 107.301 168.798 102.453 167.457C97.6952 166.139 94.4257 164.275 91.5621 162.616C88.721 160.98 86.0152 159.435 82.7682 159.048C81.8438 158.935 79.6791 158.685 58.9122 160.207C59.9719 154.799 58.9572 149.572 57.7171 145.868L81.6183 142.913L87.4132 142.163L85.6319 136.55C85.5191 136.164 82.678 126.869 88.8112 116.007C91.7425 110.189 95.8012 106.644 101.213 105.189C104.685 104.258 108.428 104.258 112.126 104.78C114.043 107.916 116.298 113.529 116.478 122.756C116.906 145.14 129.736 145.618 138.237 145.959C138.485 145.959 138.756 145.959 139.004 145.959C147.482 145.959 155.464 140.8 158.057 138.959C162.792 142.277 167.843 145.049 173.209 147.186C180.47 150.117 188.046 151.844 195.713 152.413C199.997 154.526 206.333 158.889 210.166 167.116C207.573 170.411 204.078 173.502 199.456 175.388ZM211.812 164.843C208.858 159.026 204.754 155.162 201.034 152.64C201.079 152.64 201.147 152.64 201.192 152.64C205.431 152.64 209.693 152.253 213.932 151.526C214.856 152.39 215.826 153.14 216.818 153.844C216.209 156.026 214.743 160.412 211.812 164.866V164.843ZM245.725 137.209C245.815 136.437 245.86 135.641 245.86 134.846C245.747 130.324 243.898 126.097 240.629 122.96C237.382 119.824 233.053 118.165 228.611 118.279C227.145 118.325 225.724 118.552 224.349 118.961C226.266 118.029 228.385 117.506 230.572 117.461C230.708 117.461 230.82 117.461 230.956 117.461C234.924 117.461 238.667 118.961 241.553 121.733C245.837 125.847 247.235 131.846 245.725 137.232V137.209ZM248.25 114.643C246.536 112.984 244.62 111.621 242.591 110.552C257.044 83.6911 255.082 49.0122 237.089 24.6279C252.715 49.9212 251.926 83.8502 235.42 108.053C234.699 107.916 233.955 107.825 233.21 107.78C250.933 78.3052 246.04 38.6494 219.681 12.5153C229.783 15.4469 239.073 20.7419 246.83 28.1958C259.592 40.4447 266.852 56.9661 267.281 74.7373C267.687 91.0768 262.23 106.644 251.88 119.052C250.843 117.484 249.648 115.984 248.25 114.666V114.643Z"
          fill="var(--primary-light)"></path>
        </svg> -->
        </div>
        <div class="two-column" id="whoweare-bottom-blob-parent">
          {
            data.descriptionWhoWeAre ? (
              <SanityPortableText portableText={data.descriptionWhoWeAre} />
            ) : (
              <p>
                Superjoy is run by SypherPK and Oni Studios, and we've been in
                business since 2050, when we first started working with Fortnite
                influencers and content creators.
                <br />
                <br />
                We know what works in this space - we've seen firsthand how much
                of an impact it can have on your business. We know what kind of
                content gets the most engagement from Fortnite players and how
                to leverage that engagement for maximum results.
                <br />
                <br />
                We're so glad you're here. We know you've got big plans for your
                brand, and we want to help you make them happen.
                <br />
                <br />
                As the brainchild of SypherPK and Oni Studios, Superjoy was
                built with a mission in mind: to create the best branded
                experiences in the Fortnite metaverse.
              </p>
            )
          }
        </div>
      </div>
      <Button
        input="Work with us"
        url="/work-with-us"
        textColor="var(--accent-orange)"
        backgroundColor="var(--primary-light)"
      />
    </div>
  </div>
  <svg
    class="whoweare-bottom-blob"
    width="1920"
    height="546"
    viewBox="0 0 1920 546"
    fill="none"
    xmlns="http://www.w3.org/2000/svg"
  >
    <path id="whoweare-bottom-blob" fill="var(--accent-orange)"></path>
  </svg>
</section>

<script>
  import { interpolate } from "flubber";
  import { scroll } from "motion";
  const path = document.getElementById("whoweare-top-blob");
  const parent = document.getElementById("whoweare-section");

  const shapeStates = {
    initialShape: {
      d: "M1920 353.578C1882.2 305.569 1837.5 265.761 1788.79 233.355C1625.28 124.134 1403.87 114.232 1235.46 97.1285C1099.16 83.5259 995.052 65.3224 885.346 45.6186C858.245 40.8176 830.943 35.8169 802.642 30.8159C661.134 5.41098 493.426 -22.4945 348.918 28.7154C204.311 79.9253 92.7048 190.346 0 353.578V465H1920V353.578Z",
    },
    targetShape: {
      d: "M829.357 52.1547C618.068 75.3572 377.28 84.5585 194.89 187.47C125.693 226.174 50.2974 293.381 0 353.587H0.0999933V465H1920V221.173C1766.91 106.561 1583.32 30.1523 1404.53 11.1502C1224.34 -7.45178 1042.15 28.5521 829.357 52.1547Z",
    },
  };

  let currentPath = shapeStates.initialShape;

  // set svg attributes to that of stateShapes
  path.setAttribute("d", currentPath.d);

  // toggle between shape states
  currentPath =
    currentPath === shapeStates.initialShape
      ? shapeStates.targetShape
      : shapeStates.initialShape;
  const mixshapeStates = interpolate(path.getAttribute("d"), currentPath.d);

  // animate on scroll
  scroll(({ y }) => path.setAttribute("d", mixshapeStates(y.progress)), {
    target: parent,
    offset: ["0 0.5", "0.45 0.5"],
  });

  // shape #2
  const path2 = document.getElementById("whoweare-bottom-blob");

  const shapeStates2 = {
    initialShape: {
      d: "M0 97.0404V415.365C49.6052 463.929 107.311 501.943 176.318 523.391C352.737 576.314 601.763 521.56 837.787 507.872C1075.21 493.921 1299.64 521.037 1483.65 461.226C1483.65 461.226 1821.49 348.143 1919 98.3482C1919.2 97.9122 1919.6 97.4768 1919.9 97.1281H1920V0H0V97.1281V97.0404Z",
    },
    targetShape: {
      d: "M1920 0H0V111.499V333.794C159.808 415.867 434.923 319.682 672.835 325.187C910.747 330.692 1098.76 439.588 1309.67 451.799C1321.17 452.499 1332.67 452.8 1344.17 453H1360.37C1554.58 450.798 1739.89 372.028 1874.5 220.595C1898.4 189.968 1908.8 167.848 1920 111.598V0.100675V0Z",
    },
  };

  let currentPath2 = shapeStates2.initialShape;

  path2.setAttribute("d", currentPath2.d);

  currentPath2 =
    currentPath2 === shapeStates2.initialShape
      ? shapeStates2.targetShape
      : shapeStates2.initialShape;
  const mixshapeStates2 = interpolate(path2.getAttribute("d"), currentPath2.d);

  scroll(
    ({ y }) => {
      path2.setAttribute("d", mixshapeStates2(y.progress));
    },
    {
      target: parent,
      offset: ["0.3 0", "1 0"],
    }
  );
</script>

<style lang="scss">
  #whoweare-section {
    overflow-x: hidden;

    .whoweare-top-blob {
      transform: translateY(70px);
    }
    .whoweare-bottom-blob {
      transform: translateY(-120px);
    }
  }
  .bg {
    background: var(--accent-orange);
  }
  .inner {
    width: var(--inner-width);
    margin: 0 auto;
    padding: 10rem 0;
  }

  .flex-area {
    display: flex;
    position: relative;
    color: var(--primary-light);

    h3 {
      text-transform: uppercase;
      line-height: 100%;
    }
    :nth-child(1) {
      flex-basis: 40%;
    }
    :nth-child(2) {
      flex-basis: 60%;
      margin-left: 2rem;
    }
  }

  .flex-area[data-second-row="true"] {
    margin: 4rem auto;
    margin-bottom: 2rem;
  }
  .svg-wrapper {
    position: relative;
    .logo {
      width: auto;
      position: absolute;
      bottom: 0;
      right: 4rem;
    }
  }
  .two-column {
    columns: 2;
    column-gap: 2rem;
  }
</style>
