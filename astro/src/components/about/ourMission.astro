---
const { data } = Astro.props;
import { m } from "framer-motion";
import Button from "../Button.astro";
import SanityPortableText from "../SanityPortableText.astro";

const values = [
  { value: "Creativity" },
  { value: "Innovation" },
  { value: "Quality" },
  { value: "Focus" },
];
---

<section class="section-wrapper" id="scroll-parent">
  <div class="sticky-wrapper">
    <div class="inner">
      <div class="flex-container">
        <div class="left">
          <h2>Our <br /> mission</h2>
          {
            data.descriptionOurMission ? (
              <SanityPortableText portableText={data.descriptionOurMission} />
            ) : (
              <p>
                We integrate brands into the world of Fortnite, providing them
                with an interactive space to reach the gaming audience and
                expand their market. Our work focuses on immersive storytelling
                in the Fortnite Metaverse. We believe that the future of
                marketing is immersive, participatory, and community focused.
                <br />
                <br />
                The Superjoy team leverages its expert understanding of Fortnite
                content development and highly successful influencer campaigns
                to build tailored Fortnite creative experiences that activate
                the Fortnite community, convert players into brand advocates,
                and drive revenue.
              </p>
            )
          }
          <div class="button-padding">
            <Button
              input="Our process"
              url="/work-with-us"
              textColor={"var(--primary-light)"}
              backgroundColor={"var(--primary-dark)"}
            />
          </div>
        </div>
        <div class="right">
          <p id="progress"></p>
          <div class="circle">
            <!-- avatar svg  -->
            <svg
              class="svg-avatar"
              width="337"
              height="326"
              viewBox="0 0 337 326"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <circle cx="160" cy="160" r="132" fill="var(--primary-light)"
              ></circle>
              <ellipse
                cx="257"
                cy="219"
                rx="32"
                ry="33"
                fill="var(--primary-light)"></ellipse>
              <path
                d="M296.444 230.546C299.778 216.91 296.312 203.218 288.292 192.969C288.374 192.634 288.478 192.306 288.56 191.971C305.97 120.762 262.494 48.7393 191.641 31.416C165.127 24.9334 137.732 26.7596 112.468 36.6866C72.1397 52.399 41.8863 86.9619 31.5741 129.139C14.1636 200.349 57.6399 272.372 128.493 289.695C145.053 293.744 161.888 294.554 178.506 292.124C202.677 288.683 225.183 278.601 244.029 262.925C267.283 268.328 290.707 253.913 296.422 230.541L296.444 230.546ZM247.507 246.68C235.78 243.813 227.716 233.648 226.906 222.163C227.04 221.133 227.196 220.109 227.447 219.084C230.912 204.913 245.217 196.18 259.317 199.627C273.416 203.074 282.084 217.401 278.619 231.572C273.267 243.179 260.299 249.808 247.485 246.675L247.507 246.68ZM206.959 235.137C204.054 246.824 193.806 269.135 165.571 268.347C163.92 268.274 163.435 265.936 164.966 265.248C170.691 262.586 177.271 258.929 184.061 253.836C191.651 248.16 199.605 239.172 204.135 233.715C205.253 232.406 207.384 233.494 206.981 235.142L206.959 235.137ZM77.7804 204.026C77.0061 202.868 78.1408 201.398 79.4329 201.88C103.117 211 126.573 219.71 151.825 213.676C159.033 212.062 166.203 209.258 173.964 205.96C175.246 205.424 176.426 206.845 175.688 208.035C153.673 243.785 99.816 236.899 77.7859 204.003L77.7804 204.026ZM80.688 139.282C84.0437 125.557 93.3852 116.082 101.566 118.082C109.746 120.082 113.64 132.793 110.284 146.518C106.928 160.243 97.5976 169.674 89.4393 167.679C81.2811 165.685 77.3432 152.963 80.688 139.282ZM144.574 181.159C136.416 179.165 132.5 166.448 135.845 152.768C139.19 139.088 148.542 129.568 156.7 131.562C164.859 133.557 168.797 146.279 165.441 160.004C162.085 173.729 152.755 183.16 144.574 181.159ZM167.718 88.6129C146.759 81.2217 103.621 72.7761 70.4991 111.384C68.2503 113.951 63.9951 111.848 64.8566 108.517C68.2694 95.2307 78.9965 73.6504 112.574 57.4916C112.955 57.2778 113.425 57.1803 113.851 57.1664C118.535 56.9419 145.582 56.9198 171.102 83.2301C173.471 85.7455 170.979 89.7879 167.735 88.6406L167.718 88.6129ZM216.903 243.377C218.117 245.327 219.476 247.17 220.978 248.907C217.133 255.216 212.5 261.096 207.317 266.535C202.591 268.662 197.743 270.523 192.755 271.995C202.084 263.721 210.257 254.125 216.88 243.372L216.903 243.377ZM260.063 196.574C248.934 193.853 237.716 197.935 230.706 206.138C236.674 196.145 248.645 190.713 260.483 193.607C271.147 196.215 278.761 204.853 280.668 215.024C277.393 206.124 269.912 198.959 260.069 196.552L260.063 196.574ZM273.954 181.081C270.969 179.548 267.819 178.305 264.427 177.476C260.304 176.468 256.183 176.122 252.147 176.292C251.07 122.947 218.17 72.0463 169.754 50.8817C215.471 75.4004 243.619 127.572 239.411 178.798C238.123 179.262 236.868 179.782 235.619 180.374C237.249 119.993 195.354 63.9884 132.373 47.7162C150.427 43.1575 169.28 43.0208 187.68 47.5196C247.382 62.1165 284.837 121.097 273.932 181.075L273.954 181.081ZM215.871 262.298C218.96 259.275 221.859 256.065 224.57 252.666C225.431 253.467 226.353 254.212 227.303 254.94C223.62 257.605 219.816 260.099 215.871 262.298Z"
                fill="var(--primary-dark)"></path>
            </svg>
            <svg
              class="core-values-svg"
              width="540"
              height="540"
              viewBox="0 0 540 540"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M149.205 453.588C152.705 456.088 155.605 455.188 157.805 453.188L160.305 454.988C156.905 458.288 152.305 458.988 147.705 455.788C142.305 451.888 141.305 444.788 146.005 438.188C150.705 431.688 157.705 430.288 163.105 434.088C167.705 437.388 168.505 441.888 166.505 446.188L164.005 444.388C165.205 441.688 165.105 438.688 161.605 436.188C157.305 433.088 152.405 434.788 148.605 439.988C144.905 445.188 144.905 450.488 149.205 453.588Z"
                fill="#F8FAFB"></path>
              <path
                d="M172.005 470.588C165.705 467.288 164.205 460.288 167.805 453.388C171.405 446.588 178.005 443.688 184.305 446.988C190.605 450.288 192.105 457.388 188.505 464.188C184.905 471.088 178.305 473.888 172.005 470.588ZM183.105 449.388C178.105 446.788 173.505 449.388 170.605 454.888C167.705 460.388 168.205 465.688 173.205 468.288C178.205 470.888 182.805 468.288 185.705 462.788C188.605 457.288 188.105 451.988 183.105 449.388Z"
                fill="#F8FAFB"></path>
              <path
                d="M190.705 478.988L199.305 454.788L208.605 458.088C214.005 459.988 216.205 463.688 214.505 468.288C213.105 472.188 209.605 473.488 206.505 473.088L209.505 485.688L206.205 484.488L203.405 472.488L197.005 470.188L193.505 479.988L190.605 478.988H190.705ZM204.205 469.988C207.905 471.288 210.505 470.388 211.605 467.288C212.705 464.188 211.205 461.788 207.605 460.488L201.305 458.288L197.905 467.788L204.205 469.988Z"
                fill="#F8FAFB"></path>
              <path
                d="M217.605 487.888L223.005 462.788L240.005 466.488L239.505 468.988L225.505 465.988L223.605 474.788L236.005 477.488L235.405 480.088L223.005 477.388L221.105 486.088L235.105 489.088L234.605 491.588L217.605 487.888Z"
                fill="#F8FAFB"></path>
              <path
                d="M251.805 468.087H255.005C255.005 468.187 263.105 491.087 263.105 491.087L272.805 468.887H276.005C276.005 468.987 264.605 494.287 264.605 494.287H261.105C261.105 494.187 251.705 468.087 251.705 468.087H251.805Z"
                fill="#F8FAFB"></path>
              <path
                d="M295.605 485.888L283.305 486.988L281.105 494.388L278.005 494.688L286.105 468.188L289.605 467.888L302.305 492.588L299.105 492.888L295.605 485.988V485.888ZM284.105 484.388L294.405 483.488L288.205 471.088H288.105L284.205 484.388H284.105Z"
                fill="#F8FAFB"></path>
              <path
                d="M304.105 465.988L307.105 465.288L312.105 487.888L325.605 484.888L326.205 487.388L309.705 491.088L304.105 465.988Z"
                fill="#F8FAFB"></path>
              <path
                d="M343.205 482.288C337.005 484.488 332.105 482.188 329.705 475.488L324.605 461.188L327.505 460.188L332.705 474.688C334.505 479.888 338.105 481.388 342.305 479.888C346.605 478.388 348.305 474.988 346.405 469.788L341.205 455.288L344.105 454.288L349.205 468.588C351.605 475.188 349.305 480.088 343.105 482.388L343.205 482.288Z"
                fill="#F8FAFB"></path>
              <path
                d="M361.805 474.288L350.005 451.488L365.405 443.488L366.605 445.788L353.905 452.388L358.005 460.388L369.305 454.488L370.505 456.788L359.205 462.688L363.305 470.588L376.005 463.988L377.205 466.288L361.805 474.288Z"
                fill="#F8FAFB"></path>
              <path
                d="M381.805 454.588C384.505 457.788 388.105 456.988 391.205 454.788C394.205 452.688 395.405 449.688 393.705 447.188C392.505 445.388 390.705 444.888 387.505 446.388L382.905 448.388C379.705 449.788 376.205 450.288 373.705 446.588C371.305 443.088 372.505 438.488 376.905 435.388C381.405 432.288 385.805 432.188 388.805 435.688L386.305 437.388C384.305 435.288 381.305 435.288 378.305 437.388C375.205 439.488 374.605 442.488 376.105 444.688C377.605 446.788 379.205 446.688 382.205 445.488L386.905 443.488C390.605 441.888 393.705 441.988 396.005 445.288C398.505 448.888 397.105 453.688 392.605 456.788C388.005 459.988 382.805 460.588 379.305 456.188L381.805 454.488V454.588Z"
                fill="#F8FAFB"></path>
            </svg>

            {
              values.map((item, i) => {
                return <h4 id={`value-${i}`}>{item.value}</h4>;
              })
            }
          </div>
        </div>
      </div>
    </div>
  </div>
</section>

<script>
  import { scroll, timeline } from "motion";

  // get scroll container
  const parent = document.getElementById("scroll-parent");

  // get h4's
  const value1 = document.getElementById("value-0");
  const value2 = document.getElementById("value-1");
  const value3 = document.getElementById("value-2");
  const value4 = document.getElementById("value-3");

  // debug scroll
  // const progress = document.getElementById("progress");
  // scroll(({ y }) => (progress.innerHTML = y.progress.toFixed(2)), {
  //   target: parent,
  // });

  const sequence = [
    [
      value1,
      {
        opacity: [1, 0],
        y: ["-50%", -50],
        x: ["-50%", "-50%"],
        rotate: ["0", "30deg"],
      },
      { duration: 1 },
    ],
    [
      value2,
      {
        opacity: [0, 1, 0],
        y: [50, "-50%", -50],
        x: ["-50%", "-50%", "-50%"],
        rotate: ["-30deg", "0", "30deg"],
      },
      { duration: 1 },
    ],
    [
      value3,
      {
        opacity: [0, 1, 0],
        y: [50, "-50%", -50],
        x: ["-50%", "-50%", "-50%"],
        rotate: ["-30deg", "0", "30deg"],
      },
      { duration: 1 },
    ],
    [
      value4,
      {
        opacity: [0, 1],
        y: [50, "-50%"],
        x: ["-50%", "-50%"],
        rotate: ["-30deg", "0"],
      },
      { duration: 1 },
    ],
  ];

  // animate through the sequence on scroll
  scroll(timeline(sequence), { target: parent });
</script>

<style lang="scss">
  .section-wrapper {
    height: 400vh;
    padding-bottom: 10rem;
  }
  .inner {
    width: var(--inner-width);
    margin: 0 auto;
    height: 100%;
  }
  .sticky-wrapper {
    position: sticky;
    height: 90vmin;
    top: 3rem;
    padding: 5rem 0;
  }
  .flex-container {
    display: flex;
    position: relative;
    width: 100%;
    height: 100%;
  }
  .left {
    flex-basis: 50%;
    position: relative;
    color: var(--primary-dark);

    .button-padding {
      padding-top: 2rem;
      display: block;
    }

    h2 {
      font-family: "Hamburg-Regular";
      line-height: 100%;
      margin-bottom: 3rem;
    }
  }
  .right {
    flex-basis: 50%;
    position: relative;
  }

  .circle {
    position: absolute;
    bottom: 0;
    right: 0;
    background: var(--accent-orange);
    width: 70%;
    aspect-ratio: 1/1;
    height: auto;
    border-radius: 100%;

    h4 {
      font-family: "Hamburg-Bold";
      line-height: unset;
      color: var(--primary-light);
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      opacity: 0;
    }

    .core-values-svg {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      aspect-ratio: 1/1;
    }

    .svg-avatar {
      position: absolute;
      top: -25%;
      right: 0;
      animation: shake 5s ease-in-out infinite alternate;
      animation-delay: 1s;
    }
  }

  @keyframes shake {
    0% {
      transform: rotate(0deg);
    }
    20% {
      transform: rotate(-3deg);
    }
    40% {
      transform: rotate(3deg);
    }
    60% {
      transform: rotate(-3deg);
    }
    80% {
      transform: rotate(3deg);
    }
    100% {
      transform: rotate(0deg);
    }
  }
</style>
